use simple_asn1::{ASN1DecodeErr, ASN1EncodeErr};

#[derive(Debug, PartialEq)]
pub enum Error {
    Serialize(ASN1EncodeErr),
    RsaPub(ASN1EncodeErr),
    NoPubKey,
    NoPubKeyBody,
    NoIssuerName,
    NoValidityTime,
    NoSubjectName,
    Signature,
    NoSignature,
    Verify,
    NoPubKeyEnc,
    NoSignatureEnc,
    EncFirst,
    PubKeyEnc(ASN1EncodeErr),
    SeqNoIdx(usize),
    Seq(usize),
    SetNoIdx(usize),
    Set(usize),
    NumNoIdx(usize),
    Num(usize),
    VersionIdx,
    VecToU64,
    VerDeref,
    VerTag(Option<u64>),
    VerBlock,
    OidNoIdx(usize),
    SignOidDec(ASN1DecodeErr),
    Oid(usize),
    NameGet,
    NameOid(ASN1DecodeErr),
    NameObjOid,
    NameGet1,
    NoName,
    RsaPubGet0,
    RsaPubDec(ASN1DecodeErr),
    RsaPubOid,
    RsaPubGet1,
    RsaPubDer,
    RsaPubDecSk(ASN1DecodeErr),
    RsaPubGet2,
    RsaPubN,
    RsaPubGet3,
    RsaPubFrom,
    RsaPubE,
    EcPubGet0,
    EcPubDec(ASN1DecodeErr),
    EcPubOId,
    EcPubGet1,
    EcPubDecCur(ASN1DecodeErr),
    EcPubCurve,
    EcPubGet2,
    EcPubKey,
    PubDec(ASN1DecodeErr),
    TimeIdx0,
    TimeNb,
    TimeIdx1,
    TimeNa,
    ExtRawIdx0,
    ExtRawOidId(ASN1DecodeErr),
    ExtRawOid,
    ExtRawIdx1,
    ExtRawIdx2,
    ExtRawData,
    ExtDeref,
    ExtTag,
    ExtExpl,
    GetSignIdx,
    GetSign,
    DecFull(ASN1DecodeErr),
    KeyUsage(ASN1DecodeErr),
    KeyUsageIdx0,
    KeyUsageIdx1,
    KeyUsageBits,
    ExtDeserialize,
}
